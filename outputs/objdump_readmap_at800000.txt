
readmap.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000800238 l    d  .interp	0000000000000000              .interp
0000000000800254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000800274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000800298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000008002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000800390 l    d  .dynstr	0000000000000000              .dynstr
0000000000800402 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000800418 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000800448 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000800460 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000800508 l    d  .init	0000000000000000              .init
0000000000800530 l    d  .plt	0000000000000000              .plt
00000000008005b0 l    d  .plt.got	0000000000000000              .plt.got
00000000008005c0 l    d  .text	0000000000000000              .text
0000000000800814 l    d  .fini	0000000000000000              .fini
0000000000800820 l    d  .rodata	0000000000000000              .rodata
0000000000800868 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000008008a8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000a00e10 l    d  .init_array	0000000000000000              .init_array
0000000000a00e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000a00e20 l    d  .jcr	0000000000000000              .jcr
0000000000a00e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000a00ff8 l    d  .got	0000000000000000              .got
0000000000a01000 l    d  .got.plt	0000000000000000              .got.plt
0000000000a01050 l    d  .data	0000000000000000              .data
0000000000a01060 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000a00e20 l     O .jcr	0000000000000000              __JCR_LIST__
00000000008005f0 l     F .text	0000000000000000              deregister_tm_clones
0000000000800630 l     F .text	0000000000000000              register_tm_clones
0000000000800670 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000a01060 l     O .bss	0000000000000001              completed.7594
0000000000a00e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000800690 l     F .text	0000000000000000              frame_dummy
0000000000a00e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              readmap.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000008009b8 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000a00e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000a00e18 l       .init_array	0000000000000000              __init_array_end
0000000000a00e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000a00e10 l       .init_array	0000000000000000              __init_array_start
0000000000800868 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000a01000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000800810 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000a01050  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
0000000000a01060 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
0000000000800814 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
00000000008006b6 g     F .text	00000000000000c9              read_maps
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              fgets@@GLIBC_2.2.5
0000000000a01050 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000a01058 g     O .data	0000000000000000              .hidden __dso_handle
0000000000800820 g     O .rodata	0000000000000004              _IO_stdin_used
00000000008007a0 g     F .text	0000000000000065              __libc_csu_init
0000000000a01068 g       .bss	0000000000000000              _end
00000000008005c0 g     F .text	000000000000002a              _start
0000000000a01060 g       .bss	0000000000000000              __bss_start
000000000080077f g     F .text	000000000000001a              main
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000a01060 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000800508 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000800238 <.interp>:
  800238:	2f                   	(bad)  
  800239:	6c                   	insb   (%dx),%es:(%rdi)
  80023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  800241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  800246:	78 2d                	js     800275 <_init-0x293>
  800248:	78 38                	js     800282 <_init-0x286>
  80024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  800250:	6f                   	outsl  %ds:(%rsi),(%dx)
  800251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000800254 <.note.ABI-tag>:
  800254:	04 00                	add    $0x0,%al
  800256:	00 00                	add    %al,(%rax)
  800258:	10 00                	adc    %al,(%rax)
  80025a:	00 00                	add    %al,(%rax)
  80025c:	01 00                	add    %eax,(%rax)
  80025e:	00 00                	add    %al,(%rax)
  800260:	47                   	rex.RXB
  800261:	4e 55                	rex.WRX push %rbp
  800263:	00 00                	add    %al,(%rax)
  800265:	00 00                	add    %al,(%rax)
  800267:	00 02                	add    %al,(%rdx)
  800269:	00 00                	add    %al,(%rax)
  80026b:	00 06                	add    %al,(%rsi)
  80026d:	00 00                	add    %al,(%rax)
  80026f:	00 20                	add    %ah,(%rax)
  800271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000800274 <.note.gnu.build-id>:
  800274:	04 00                	add    $0x0,%al
  800276:	00 00                	add    %al,(%rax)
  800278:	14 00                	adc    $0x0,%al
  80027a:	00 00                	add    %al,(%rax)
  80027c:	03 00                	add    (%rax),%eax
  80027e:	00 00                	add    %al,(%rax)
  800280:	47                   	rex.RXB
  800281:	4e 55                	rex.WRX push %rbp
  800283:	00 06                	add    %al,(%rsi)
  800285:	9d                   	popfq  
  800286:	a2 32 e4 b9 71 54 94 	movabs %al,0x617d945471b9e432
  80028d:	7d 61 
  80028f:	13 b0 3a fe 7c 2b    	adc    0x2b7cfe3a(%rax),%esi
  800295:	78 1c                	js     8002b3 <_init-0x255>
  800297:	b4                   	.byte 0xb4

Disassembly of section .gnu.hash:

0000000000800298 <.gnu.hash>:
  800298:	01 00                	add    %eax,(%rax)
  80029a:	00 00                	add    %al,(%rax)
  80029c:	01 00                	add    %eax,(%rax)
  80029e:	00 00                	add    %al,(%rax)
  8002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000008002b8 <.dynsym>:
	...
  8002d0:	11 00                	adc    %eax,(%rax)
  8002d2:	00 00                	add    %al,(%rax)
  8002d4:	12 00                	adc    (%rax),%al
	...
  8002e6:	00 00                	add    %al,(%rax)
  8002e8:	34 00                	xor    $0x0,%al
  8002ea:	00 00                	add    %al,(%rax)
  8002ec:	12 00                	adc    (%rax),%al
	...
  8002fe:	00 00                	add    %al,(%rax)
  800300:	16                   	(bad)  
  800301:	00 00                	add    %al,(%rax)
  800303:	00 12                	add    %dl,(%rdx)
	...
  800315:	00 00                	add    %al,(%rax)
  800317:	00 27                	add    %ah,(%rdi)
  800319:	00 00                	add    %al,(%rax)
  80031b:	00 12                	add    %dl,(%rdx)
	...
  80032d:	00 00                	add    %al,(%rax)
  80032f:	00 3b                	add    %bh,(%rbx)
  800331:	00 00                	add    %al,(%rax)
  800333:	00 12                	add    %dl,(%rdx)
	...
  800345:	00 00                	add    %al,(%rax)
  800347:	00 2e                	add    %ch,(%rsi)
  800349:	00 00                	add    %al,(%rax)
  80034b:	00 12                	add    %dl,(%rdx)
	...
  80035d:	00 00                	add    %al,(%rax)
  80035f:	00 4d 00             	add    %cl,0x0(%rbp)
  800362:	00 00                	add    %al,(%rax)
  800364:	20 00                	and    %al,(%rax)
	...
  800376:	00 00                	add    %al,(%rax)
  800378:	0b 00                	or     (%rax),%eax
  80037a:	00 00                	add    %al,(%rax)
  80037c:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000800390 <.dynstr>:
  800390:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  800394:	63 2e                	movslq (%rsi),%ebp
  800396:	73 6f                	jae    800407 <_init-0x101>
  800398:	2e 36 00 66 6f       	cs add %ah,%ss:0x6f(%rsi)
  80039d:	70 65                	jo     800404 <_init-0x104>
  80039f:	6e                   	outsb  %ds:(%rsi),(%dx)
  8003a0:	00 70 75             	add    %dh,0x75(%rax)
  8003a3:	74 73                	je     800418 <_init-0xf0>
  8003a5:	00 5f 5f             	add    %bl,0x5f(%rdi)
  8003a8:	73 74                	jae    80041e <_init-0xea>
  8003aa:	61                   	(bad)  
  8003ab:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
  8003ae:	63 68 6b             	movslq 0x6b(%rax),%ebp
  8003b1:	5f                   	pop    %rdi
  8003b2:	66 61                	data16 (bad) 
  8003b4:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
  8003bb:	74 
  8003bc:	66 00 66 67          	data16 add %ah,0x67(%rsi)
  8003c0:	65 74 73             	gs je  800436 <_init-0xd2>
  8003c3:	00 66 63             	add    %ah,0x63(%rsi)
  8003c6:	6c                   	insb   (%dx),%es:(%rdi)
  8003c7:	6f                   	outsl  %ds:(%rsi),(%dx)
  8003c8:	73 65                	jae    80042f <_init-0xd9>
  8003ca:	00 5f 5f             	add    %bl,0x5f(%rdi)
  8003cd:	6c                   	insb   (%dx),%es:(%rdi)
  8003ce:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  8003d5:	72 74                	jb     80044b <_init-0xbd>
  8003d7:	5f                   	pop    %rdi
  8003d8:	6d                   	insl   (%dx),%es:(%rdi)
  8003d9:	61                   	(bad)  
  8003da:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  8003e1:	6f                   	outsl  %ds:(%rsi),(%dx)
  8003e2:	6e                   	outsb  %ds:(%rsi),(%dx)
  8003e3:	5f                   	pop    %rdi
  8003e4:	73 74                	jae    80045a <_init-0xae>
  8003e6:	61                   	(bad)  
  8003e7:	72 74                	jb     80045d <_init-0xab>
  8003e9:	5f                   	pop    %rdi
  8003ea:	5f                   	pop    %rdi
  8003eb:	00 47 4c             	add    %al,0x4c(%rdi)
  8003ee:	49                   	rex.WB
  8003ef:	42                   	rex.X
  8003f0:	43 5f                	rex.XB pop %r15
  8003f2:	32 2e                	xor    (%rsi),%ch
  8003f4:	34 00                	xor    $0x0,%al
  8003f6:	47                   	rex.RXB
  8003f7:	4c                   	rex.WR
  8003f8:	49                   	rex.WB
  8003f9:	42                   	rex.X
  8003fa:	43 5f                	rex.XB pop %r15
  8003fc:	32 2e                	xor    (%rsi),%ch
  8003fe:	32 2e                	xor    (%rsi),%ch
  800400:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000800402 <.gnu.version>:
  800402:	00 00                	add    %al,(%rax)
  800404:	02 00                	add    (%rax),%al
  800406:	02 00                	add    (%rax),%al
  800408:	03 00                	add    (%rax),%eax
  80040a:	02 00                	add    (%rax),%al
  80040c:	02 00                	add    (%rax),%al
  80040e:	02 00                	add    (%rax),%al
  800410:	00 00                	add    %al,(%rax)
  800412:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000800418 <.gnu.version_r>:
  800418:	01 00                	add    %eax,(%rax)
  80041a:	02 00                	add    (%rax),%al
  80041c:	01 00                	add    %eax,(%rax)
  80041e:	00 00                	add    %al,(%rax)
  800420:	10 00                	adc    %al,(%rax)
  800422:	00 00                	add    %al,(%rax)
  800424:	00 00                	add    %al,(%rax)
  800426:	00 00                	add    %al,(%rax)
  800428:	14 69                	adc    $0x69,%al
  80042a:	69 0d 00 00 03 00 5c 	imul   $0x5c,0x30000(%rip),%ecx        # 830434 <__FRAME_END__+0x2fa7c>
  800431:	00 00 00 
  800434:	10 00                	adc    %al,(%rax)
  800436:	00 00                	add    %al,(%rax)
  800438:	75 1a                	jne    800454 <_init-0xb4>
  80043a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  800440:	66 00 00             	data16 add %al,(%rax)
  800443:	00 00                	add    %al,(%rax)
  800445:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000800448 <.rela.dyn>:
  800448:	f8                   	clc    
  800449:	0f a0                	pushq  %fs
  80044b:	00 00                	add    %al,(%rax)
  80044d:	00 00                	add    %al,(%rax)
  80044f:	00 06                	add    %al,(%rsi)
  800451:	00 00                	add    %al,(%rax)
  800453:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000800460 <.rela.plt>:
  800460:	18 10                	sbb    %dl,(%rax)
  800462:	a0 00 00 00 00 00 07 	movabs 0x70000000000,%al
  800469:	00 00 
  80046b:	00 01                	add    %al,(%rcx)
	...
  800475:	00 00                	add    %al,(%rax)
  800477:	00 20                	add    %ah,(%rax)
  800479:	10 a0 00 00 00 00    	adc    %ah,0x0(%rax)
  80047f:	00 07                	add    %al,(%rdi)
  800481:	00 00                	add    %al,(%rax)
  800483:	00 02                	add    %al,(%rdx)
	...
  80048d:	00 00                	add    %al,(%rax)
  80048f:	00 28                	add    %ch,(%rax)
  800491:	10 a0 00 00 00 00    	adc    %ah,0x0(%rax)
  800497:	00 07                	add    %al,(%rdi)
  800499:	00 00                	add    %al,(%rax)
  80049b:	00 03                	add    %al,(%rbx)
	...
  8004a5:	00 00                	add    %al,(%rax)
  8004a7:	00 30                	add    %dh,(%rax)
  8004a9:	10 a0 00 00 00 00    	adc    %ah,0x0(%rax)
  8004af:	00 07                	add    %al,(%rdi)
  8004b1:	00 00                	add    %al,(%rax)
  8004b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  8004be:	00 00                	add    %al,(%rax)
  8004c0:	38 10                	cmp    %dl,(%rax)
  8004c2:	a0 00 00 00 00 00 07 	movabs 0x70000000000,%al
  8004c9:	00 00 
  8004cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 8004d1 <_init-0x37>
  8004d1:	00 00                	add    %al,(%rax)
  8004d3:	00 00                	add    %al,(%rax)
  8004d5:	00 00                	add    %al,(%rax)
  8004d7:	00 40 10             	add    %al,0x10(%rax)
  8004da:	a0 00 00 00 00 00 07 	movabs 0x70000000000,%al
  8004e1:	00 00 
  8004e3:	00 06                	add    %al,(%rsi)
	...
  8004ed:	00 00                	add    %al,(%rax)
  8004ef:	00 48 10             	add    %cl,0x10(%rax)
  8004f2:	a0 00 00 00 00 00 07 	movabs 0x70000000000,%al
  8004f9:	00 00 
  8004fb:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .init:

0000000000800508 <_init>:
  800508:	48 83 ec 08          	sub    $0x8,%rsp
  80050c:	48 8b 05 e5 0a 20 00 	mov    0x200ae5(%rip),%rax        # a00ff8 <_DYNAMIC+0x1d0>
  800513:	48 85 c0             	test   %rax,%rax
  800516:	74 05                	je     80051d <_init+0x15>
  800518:	e8 93 00 00 00       	callq  8005b0 <fopen@plt+0x10>
  80051d:	48 83 c4 08          	add    $0x8,%rsp
  800521:	c3                   	retq   

Disassembly of section .plt:

0000000000800530 <puts@plt-0x10>:
  800530:	ff 35 d2 0a 20 00    	pushq  0x200ad2(%rip)        # a01008 <_GLOBAL_OFFSET_TABLE_+0x8>
  800536:	ff 25 d4 0a 20 00    	jmpq   *0x200ad4(%rip)        # a01010 <_GLOBAL_OFFSET_TABLE_+0x10>
  80053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000800540 <puts@plt>:
  800540:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # a01018 <_GLOBAL_OFFSET_TABLE_+0x18>
  800546:	68 00 00 00 00       	pushq  $0x0
  80054b:	e9 e0 ff ff ff       	jmpq   800530 <_init+0x28>

0000000000800550 <fclose@plt>:
  800550:	ff 25 ca 0a 20 00    	jmpq   *0x200aca(%rip)        # a01020 <_GLOBAL_OFFSET_TABLE_+0x20>
  800556:	68 01 00 00 00       	pushq  $0x1
  80055b:	e9 d0 ff ff ff       	jmpq   800530 <_init+0x28>

0000000000800560 <__stack_chk_fail@plt>:
  800560:	ff 25 c2 0a 20 00    	jmpq   *0x200ac2(%rip)        # a01028 <_GLOBAL_OFFSET_TABLE_+0x28>
  800566:	68 02 00 00 00       	pushq  $0x2
  80056b:	e9 c0 ff ff ff       	jmpq   800530 <_init+0x28>

0000000000800570 <printf@plt>:
  800570:	ff 25 ba 0a 20 00    	jmpq   *0x200aba(%rip)        # a01030 <_GLOBAL_OFFSET_TABLE_+0x30>
  800576:	68 03 00 00 00       	pushq  $0x3
  80057b:	e9 b0 ff ff ff       	jmpq   800530 <_init+0x28>

0000000000800580 <__libc_start_main@plt>:
  800580:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # a01038 <_GLOBAL_OFFSET_TABLE_+0x38>
  800586:	68 04 00 00 00       	pushq  $0x4
  80058b:	e9 a0 ff ff ff       	jmpq   800530 <_init+0x28>

0000000000800590 <fgets@plt>:
  800590:	ff 25 aa 0a 20 00    	jmpq   *0x200aaa(%rip)        # a01040 <_GLOBAL_OFFSET_TABLE_+0x40>
  800596:	68 05 00 00 00       	pushq  $0x5
  80059b:	e9 90 ff ff ff       	jmpq   800530 <_init+0x28>

00000000008005a0 <fopen@plt>:
  8005a0:	ff 25 a2 0a 20 00    	jmpq   *0x200aa2(%rip)        # a01048 <_GLOBAL_OFFSET_TABLE_+0x48>
  8005a6:	68 06 00 00 00       	pushq  $0x6
  8005ab:	e9 80 ff ff ff       	jmpq   800530 <_init+0x28>

Disassembly of section .plt.got:

00000000008005b0 <.plt.got>:
  8005b0:	ff 25 42 0a 20 00    	jmpq   *0x200a42(%rip)        # a00ff8 <_DYNAMIC+0x1d0>
  8005b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000008005c0 <_start>:
  8005c0:	31 ed                	xor    %ebp,%ebp
  8005c2:	49 89 d1             	mov    %rdx,%r9
  8005c5:	5e                   	pop    %rsi
  8005c6:	48 89 e2             	mov    %rsp,%rdx
  8005c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  8005cd:	50                   	push   %rax
  8005ce:	54                   	push   %rsp
  8005cf:	49 c7 c0 10 08 80 00 	mov    $0x800810,%r8
  8005d6:	48 c7 c1 a0 07 80 00 	mov    $0x8007a0,%rcx
  8005dd:	48 c7 c7 7f 07 80 00 	mov    $0x80077f,%rdi
  8005e4:	e8 97 ff ff ff       	callq  800580 <__libc_start_main@plt>
  8005e9:	f4                   	hlt    
  8005ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000008005f0 <deregister_tm_clones>:
  8005f0:	b8 67 10 a0 00       	mov    $0xa01067,%eax
  8005f5:	55                   	push   %rbp
  8005f6:	48 2d 60 10 a0 00    	sub    $0xa01060,%rax
  8005fc:	48 83 f8 0e          	cmp    $0xe,%rax
  800600:	48 89 e5             	mov    %rsp,%rbp
  800603:	76 1b                	jbe    800620 <deregister_tm_clones+0x30>
  800605:	b8 00 00 00 00       	mov    $0x0,%eax
  80060a:	48 85 c0             	test   %rax,%rax
  80060d:	74 11                	je     800620 <deregister_tm_clones+0x30>
  80060f:	5d                   	pop    %rbp
  800610:	bf 60 10 a0 00       	mov    $0xa01060,%edi
  800615:	ff e0                	jmpq   *%rax
  800617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  80061e:	00 00 
  800620:	5d                   	pop    %rbp
  800621:	c3                   	retq   
  800622:	0f 1f 40 00          	nopl   0x0(%rax)
  800626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  80062d:	00 00 00 

0000000000800630 <register_tm_clones>:
  800630:	be 60 10 a0 00       	mov    $0xa01060,%esi
  800635:	55                   	push   %rbp
  800636:	48 81 ee 60 10 a0 00 	sub    $0xa01060,%rsi
  80063d:	48 c1 fe 03          	sar    $0x3,%rsi
  800641:	48 89 e5             	mov    %rsp,%rbp
  800644:	48 89 f0             	mov    %rsi,%rax
  800647:	48 c1 e8 3f          	shr    $0x3f,%rax
  80064b:	48 01 c6             	add    %rax,%rsi
  80064e:	48 d1 fe             	sar    %rsi
  800651:	74 15                	je     800668 <register_tm_clones+0x38>
  800653:	b8 00 00 00 00       	mov    $0x0,%eax
  800658:	48 85 c0             	test   %rax,%rax
  80065b:	74 0b                	je     800668 <register_tm_clones+0x38>
  80065d:	5d                   	pop    %rbp
  80065e:	bf 60 10 a0 00       	mov    $0xa01060,%edi
  800663:	ff e0                	jmpq   *%rax
  800665:	0f 1f 00             	nopl   (%rax)
  800668:	5d                   	pop    %rbp
  800669:	c3                   	retq   
  80066a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000800670 <__do_global_dtors_aux>:
  800670:	80 3d e9 09 20 00 00 	cmpb   $0x0,0x2009e9(%rip)        # a01060 <__TMC_END__>
  800677:	75 11                	jne    80068a <__do_global_dtors_aux+0x1a>
  800679:	55                   	push   %rbp
  80067a:	48 89 e5             	mov    %rsp,%rbp
  80067d:	e8 6e ff ff ff       	callq  8005f0 <deregister_tm_clones>
  800682:	5d                   	pop    %rbp
  800683:	c6 05 d6 09 20 00 01 	movb   $0x1,0x2009d6(%rip)        # a01060 <__TMC_END__>
  80068a:	f3 c3                	repz retq 
  80068c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000800690 <frame_dummy>:
  800690:	bf 20 0e a0 00       	mov    $0xa00e20,%edi
  800695:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  800699:	75 05                	jne    8006a0 <frame_dummy+0x10>
  80069b:	eb 93                	jmp    800630 <register_tm_clones>
  80069d:	0f 1f 00             	nopl   (%rax)
  8006a0:	b8 00 00 00 00       	mov    $0x0,%eax
  8006a5:	48 85 c0             	test   %rax,%rax
  8006a8:	74 f1                	je     80069b <frame_dummy+0xb>
  8006aa:	55                   	push   %rbp
  8006ab:	48 89 e5             	mov    %rsp,%rbp
  8006ae:	ff d0                	callq  *%rax
  8006b0:	5d                   	pop    %rbp
  8006b1:	e9 7a ff ff ff       	jmpq   800630 <register_tm_clones>

00000000008006b6 <read_maps>:
  8006b6:	55                   	push   %rbp
  8006b7:	48 89 e5             	mov    %rsp,%rbp
  8006ba:	48 81 ec 00 04 00 00 	sub    $0x400,%rsp
  8006c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  8006c8:	00 00 
  8006ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  8006ce:	31 c0                	xor    %eax,%eax
  8006d0:	48 c7 85 00 fc ff ff 	movq   $0x0,-0x400(%rbp)
  8006d7:	00 00 00 00 
  8006db:	48 c7 85 08 fc ff ff 	movq   $0x800824,-0x3f8(%rbp)
  8006e2:	24 08 80 00 
  8006e6:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  8006ed:	be 34 08 80 00       	mov    $0x800834,%esi
  8006f2:	48 89 c7             	mov    %rax,%rdi
  8006f5:	e8 a6 fe ff ff       	callq  8005a0 <fopen@plt>
  8006fa:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
  800701:	48 83 bd 00 fc ff ff 	cmpq   $0x0,-0x400(%rbp)
  800708:	00 
  800709:	75 2a                	jne    800735 <read_maps+0x7f>
  80070b:	bf 36 08 80 00       	mov    $0x800836,%edi
  800710:	e8 2b fe ff ff       	callq  800540 <puts@plt>
  800715:	b8 01 00 00 00       	mov    $0x1,%eax
  80071a:	eb 4d                	jmp    800769 <read_maps+0xb3>
  80071c:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
  800723:	48 89 c6             	mov    %rax,%rsi
  800726:	bf 49 08 80 00       	mov    $0x800849,%edi
  80072b:	b8 00 00 00 00       	mov    $0x0,%eax
  800730:	e8 3b fe ff ff       	callq  800570 <printf@plt>
  800735:	48 8b 95 00 fc ff ff 	mov    -0x400(%rbp),%rdx
  80073c:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
  800743:	be e8 03 00 00       	mov    $0x3e8,%esi
  800748:	48 89 c7             	mov    %rax,%rdi
  80074b:	e8 40 fe ff ff       	callq  800590 <fgets@plt>
  800750:	48 85 c0             	test   %rax,%rax
  800753:	75 c7                	jne    80071c <read_maps+0x66>
  800755:	48 8b 85 00 fc ff ff 	mov    -0x400(%rbp),%rax
  80075c:	48 89 c7             	mov    %rax,%rdi
  80075f:	e8 ec fd ff ff       	callq  800550 <fclose@plt>
  800764:	b8 00 00 00 00       	mov    $0x0,%eax
  800769:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  80076d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  800774:	00 00 
  800776:	74 05                	je     80077d <read_maps+0xc7>
  800778:	e8 e3 fd ff ff       	callq  800560 <__stack_chk_fail@plt>
  80077d:	c9                   	leaveq 
  80077e:	c3                   	retq   

000000000080077f <main>:
  80077f:	55                   	push   %rbp
  800780:	48 89 e5             	mov    %rsp,%rbp
  800783:	e8 2e ff ff ff       	callq  8006b6 <read_maps>
  800788:	bf 4c 08 80 00       	mov    $0x80084c,%edi
  80078d:	e8 ae fd ff ff       	callq  800540 <puts@plt>
  800792:	b8 00 00 00 00       	mov    $0x0,%eax
  800797:	5d                   	pop    %rbp
  800798:	c3                   	retq   
  800799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000008007a0 <__libc_csu_init>:
  8007a0:	41 57                	push   %r15
  8007a2:	41 56                	push   %r14
  8007a4:	41 89 ff             	mov    %edi,%r15d
  8007a7:	41 55                	push   %r13
  8007a9:	41 54                	push   %r12
  8007ab:	4c 8d 25 5e 06 20 00 	lea    0x20065e(%rip),%r12        # a00e10 <__frame_dummy_init_array_entry>
  8007b2:	55                   	push   %rbp
  8007b3:	48 8d 2d 5e 06 20 00 	lea    0x20065e(%rip),%rbp        # a00e18 <__init_array_end>
  8007ba:	53                   	push   %rbx
  8007bb:	49 89 f6             	mov    %rsi,%r14
  8007be:	49 89 d5             	mov    %rdx,%r13
  8007c1:	4c 29 e5             	sub    %r12,%rbp
  8007c4:	48 83 ec 08          	sub    $0x8,%rsp
  8007c8:	48 c1 fd 03          	sar    $0x3,%rbp
  8007cc:	e8 37 fd ff ff       	callq  800508 <_init>
  8007d1:	48 85 ed             	test   %rbp,%rbp
  8007d4:	74 20                	je     8007f6 <__libc_csu_init+0x56>
  8007d6:	31 db                	xor    %ebx,%ebx
  8007d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  8007df:	00 
  8007e0:	4c 89 ea             	mov    %r13,%rdx
  8007e3:	4c 89 f6             	mov    %r14,%rsi
  8007e6:	44 89 ff             	mov    %r15d,%edi
  8007e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  8007ed:	48 83 c3 01          	add    $0x1,%rbx
  8007f1:	48 39 eb             	cmp    %rbp,%rbx
  8007f4:	75 ea                	jne    8007e0 <__libc_csu_init+0x40>
  8007f6:	48 83 c4 08          	add    $0x8,%rsp
  8007fa:	5b                   	pop    %rbx
  8007fb:	5d                   	pop    %rbp
  8007fc:	41 5c                	pop    %r12
  8007fe:	41 5d                	pop    %r13
  800800:	41 5e                	pop    %r14
  800802:	41 5f                	pop    %r15
  800804:	c3                   	retq   
  800805:	90                   	nop
  800806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  80080d:	00 00 00 

0000000000800810 <__libc_csu_fini>:
  800810:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000800814 <_fini>:
  800814:	48 83 ec 08          	sub    $0x8,%rsp
  800818:	48 83 c4 08          	add    $0x8,%rsp
  80081c:	c3                   	retq   

Disassembly of section .rodata:

0000000000800820 <_IO_stdin_used>:
  800820:	01 00                	add    %eax,(%rax)
  800822:	02 00                	add    (%rax),%al
  800824:	2f                   	(bad)  
  800825:	70 72                	jo     800899 <__GNU_EH_FRAME_HDR+0x31>
  800827:	6f                   	outsl  %ds:(%rsi),(%dx)
  800828:	63 2f                	movslq (%rdi),%ebp
  80082a:	73 65                	jae    800891 <__GNU_EH_FRAME_HDR+0x29>
  80082c:	6c                   	insb   (%dx),%es:(%rdi)
  80082d:	66 2f                	data16 (bad) 
  80082f:	6d                   	insl   (%dx),%es:(%rdi)
  800830:	61                   	(bad)  
  800831:	70 73                	jo     8008a6 <__GNU_EH_FRAME_HDR+0x3e>
  800833:	00 72 00             	add    %dh,0x0(%rdx)
  800836:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  800838:	75 6c                	jne    8008a6 <__GNU_EH_FRAME_HDR+0x3e>
  80083a:	64 6e                	outsb  %fs:(%rsi),(%dx)
  80083c:	27                   	(bad)  
  80083d:	74 20                	je     80085f <_IO_stdin_used+0x3f>
  80083f:	6f                   	outsl  %ds:(%rsi),(%dx)
  800840:	70 65                	jo     8008a7 <__GNU_EH_FRAME_HDR+0x3f>
  800842:	6e                   	outsb  %ds:(%rsi),(%dx)
  800843:	20 66 69             	and    %ah,0x69(%rsi)
  800846:	6c                   	insb   (%dx),%es:(%rdi)
  800847:	65 00 25 73 00 50 72 	add    %ah,%gs:0x72500073(%rip)        # 72d008c1 <_end+0x722ff859>
  80084e:	69 6e 74 69 6e 67 20 	imul   $0x20676e69,0x74(%rsi),%ebp
  800855:	74 68                	je     8008bf <__GNU_EH_FRAME_HDR+0x57>
  800857:	69 73 20 6f 74 68 65 	imul   $0x6568746f,0x20(%rbx),%esi
  80085e:	72 20                	jb     800880 <__GNU_EH_FRAME_HDR+0x18>
  800860:	74 68                	je     8008ca <__GNU_EH_FRAME_HDR+0x62>
  800862:	69                   	.byte 0x69
  800863:	6e                   	outsb  %ds:(%rsi),(%dx)
  800864:	67                   	addr32
	...

Disassembly of section .eh_frame_hdr:

0000000000800868 <__GNU_EH_FRAME_HDR>:
  800868:	01 1b                	add    %ebx,(%rbx)
  80086a:	03 3b                	add    (%rbx),%edi
  80086c:	3c 00                	cmp    $0x0,%al
  80086e:	00 00                	add    %al,(%rax)
  800870:	06                   	(bad)  
  800871:	00 00                	add    %al,(%rax)
  800873:	00 c8                	add    %cl,%al
  800875:	fc                   	cld    
  800876:	ff                   	(bad)  
  800877:	ff 88 00 00 00 58    	decl   0x58000000(%rax)
  80087d:	fd                   	std    
  80087e:	ff                   	(bad)  
  80087f:	ff 58 00             	lcall  *0x0(%rax)
  800882:	00 00                	add    %al,(%rax)
  800884:	4e fe                	rex.WRX (bad) 
  800886:	ff                   	(bad)  
  800887:	ff b0 00 00 00 17    	pushq  0x17000000(%rax)
  80088d:	ff                   	(bad)  
  80088e:	ff                   	(bad)  
  80088f:	ff d0                	callq  *%rax
  800891:	00 00                	add    %al,(%rax)
  800893:	00 38                	add    %bh,(%rax)
  800895:	ff                   	(bad)  
  800896:	ff                   	(bad)  
  800897:	ff f0                	push   %rax
  800899:	00 00                	add    %al,(%rax)
  80089b:	00 a8 ff ff ff 38    	add    %ch,0x38ffffff(%rax)
  8008a1:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000008008a8 <__FRAME_END__-0x110>:
  8008a8:	14 00                	adc    $0x0,%al
  8008aa:	00 00                	add    %al,(%rax)
  8008ac:	00 00                	add    %al,(%rax)
  8008ae:	00 00                	add    %al,(%rax)
  8008b0:	01 7a 52             	add    %edi,0x52(%rdx)
  8008b3:	00 01                	add    %al,(%rcx)
  8008b5:	78 10                	js     8008c7 <__GNU_EH_FRAME_HDR+0x5f>
  8008b7:	01 1b                	add    %ebx,(%rbx)
  8008b9:	0c 07                	or     $0x7,%al
  8008bb:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  8008c1:	00 00                	add    %al,(%rax)
  8008c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  8008c6:	00 00                	add    %al,(%rax)
  8008c8:	f8                   	clc    
  8008c9:	fc                   	cld    
  8008ca:	ff                   	(bad)  
  8008cb:	ff 2a                	ljmp   *(%rdx)
	...
  8008d5:	00 00                	add    %al,(%rax)
  8008d7:	00 14 00             	add    %dl,(%rax,%rax,1)
  8008da:	00 00                	add    %al,(%rax)
  8008dc:	00 00                	add    %al,(%rax)
  8008de:	00 00                	add    %al,(%rax)
  8008e0:	01 7a 52             	add    %edi,0x52(%rdx)
  8008e3:	00 01                	add    %al,(%rcx)
  8008e5:	78 10                	js     8008f7 <__GNU_EH_FRAME_HDR+0x8f>
  8008e7:	01 1b                	add    %ebx,(%rbx)
  8008e9:	0c 07                	or     $0x7,%al
  8008eb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  8008f1:	00 00                	add    %al,(%rax)
  8008f3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  8008f6:	00 00                	add    %al,(%rax)
  8008f8:	38 fc                	cmp    %bh,%ah
  8008fa:	ff                   	(bad)  
  8008fb:	ff 80 00 00 00 00    	incl   0x0(%rax)
  800901:	0e                   	(bad)  
  800902:	10 46 0e             	adc    %al,0xe(%rsi)
  800905:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  800908:	0b 77 08             	or     0x8(%rdi),%esi
  80090b:	80 00 3f             	addb   $0x3f,(%rax)
  80090e:	1a 3b                	sbb    (%rbx),%bh
  800910:	2a 33                	sub    (%rbx),%dh
  800912:	24 22                	and    $0x22,%al
  800914:	00 00                	add    %al,(%rax)
  800916:	00 00                	add    %al,(%rax)
  800918:	1c 00                	sbb    $0x0,%al
  80091a:	00 00                	add    %al,(%rax)
  80091c:	44 00 00             	add    %r8b,(%rax)
  80091f:	00 96 fd ff ff c9    	add    %dl,-0x36000003(%rsi)
  800925:	00 00                	add    %al,(%rax)
  800927:	00 00                	add    %al,(%rax)
  800929:	41 0e                	rex.B (bad) 
  80092b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  800931:	02 c4                	add    %ah,%al
  800933:	0c 07                	or     $0x7,%al
  800935:	08 00                	or     %al,(%rax)
  800937:	00 1c 00             	add    %bl,(%rax,%rax,1)
  80093a:	00 00                	add    %al,(%rax)
  80093c:	64 00 00             	add    %al,%fs:(%rax)
  80093f:	00 3f                	add    %bh,(%rdi)
  800941:	fe                   	(bad)  
  800942:	ff                   	(bad)  
  800943:	ff 1a                	lcall  *(%rdx)
  800945:	00 00                	add    %al,(%rax)
  800947:	00 00                	add    %al,(%rax)
  800949:	41 0e                	rex.B (bad) 
  80094b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  800951:	55                   	push   %rbp
  800952:	0c 07                	or     $0x7,%al
  800954:	08 00                	or     %al,(%rax)
  800956:	00 00                	add    %al,(%rax)
  800958:	44 00 00             	add    %r8b,(%rax)
  80095b:	00 84 00 00 00 40 fe 	add    %al,-0x1c00000(%rax,%rax,1)
  800962:	ff                   	(bad)  
  800963:	ff 65 00             	jmpq   *0x0(%rbp)
  800966:	00 00                	add    %al,(%rax)
  800968:	00 42 0e             	add    %al,0xe(%rdx)
  80096b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  800971:	8e 03                	mov    (%rbx),%es
  800973:	45 0e                	rex.RB (bad) 
  800975:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  80097b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86b017c9 <_end+0xffffffff86100761>
  800981:	06                   	(bad)  
  800982:	48 0e                	rex.W (bad) 
  800984:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  80098a:	72 0e                	jb     80099a <__GNU_EH_FRAME_HDR+0x132>
  80098c:	38 41 0e             	cmp    %al,0xe(%rcx)
  80098f:	30 41 0e             	xor    %al,0xe(%rcx)
  800992:	28 42 0e             	sub    %al,0xe(%rdx)
  800995:	20 42 0e             	and    %al,0xe(%rdx)
  800998:	18 42 0e             	sbb    %al,0xe(%rdx)
  80099b:	10 42 0e             	adc    %al,0xe(%rdx)
  80099e:	08 00                	or     %al,(%rax)
  8009a0:	14 00                	adc    $0x0,%al
  8009a2:	00 00                	add    %al,(%rax)
  8009a4:	cc                   	int3   
  8009a5:	00 00                	add    %al,(%rax)
  8009a7:	00 68 fe             	add    %ch,-0x2(%rax)
  8009aa:	ff                   	(bad)  
  8009ab:	ff 02                	incl   (%rdx)
	...

00000000008009b8 <__FRAME_END__>:
  8009b8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000a00e10 <__frame_dummy_init_array_entry>:
  a00e10:	90                   	nop
  a00e11:	06                   	(bad)  
  a00e12:	80 00 00             	addb   $0x0,(%rax)
  a00e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000a00e18 <__do_global_dtors_aux_fini_array_entry>:
  a00e18:	70 06                	jo     a00e20 <__JCR_END__>
  a00e1a:	80 00 00             	addb   $0x0,(%rax)
  a00e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000a00e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000a00e28 <_DYNAMIC>:
  a00e28:	01 00                	add    %eax,(%rax)
  a00e2a:	00 00                	add    %al,(%rax)
  a00e2c:	00 00                	add    %al,(%rax)
  a00e2e:	00 00                	add    %al,(%rax)
  a00e30:	01 00                	add    %eax,(%rax)
  a00e32:	00 00                	add    %al,(%rax)
  a00e34:	00 00                	add    %al,(%rax)
  a00e36:	00 00                	add    %al,(%rax)
  a00e38:	0c 00                	or     $0x0,%al
  a00e3a:	00 00                	add    %al,(%rax)
  a00e3c:	00 00                	add    %al,(%rax)
  a00e3e:	00 00                	add    %al,(%rax)
  a00e40:	08 05 80 00 00 00    	or     %al,0x80(%rip)        # a00ec6 <_DYNAMIC+0x9e>
  a00e46:	00 00                	add    %al,(%rax)
  a00e48:	0d 00 00 00 00       	or     $0x0,%eax
  a00e4d:	00 00                	add    %al,(%rax)
  a00e4f:	00 14 08             	add    %dl,(%rax,%rcx,1)
  a00e52:	80 00 00             	addb   $0x0,(%rax)
  a00e55:	00 00                	add    %al,(%rax)
  a00e57:	00 19                	add    %bl,(%rcx)
  a00e59:	00 00                	add    %al,(%rax)
  a00e5b:	00 00                	add    %al,(%rax)
  a00e5d:	00 00                	add    %al,(%rax)
  a00e5f:	00 10                	add    %dl,(%rax)
  a00e61:	0e                   	(bad)  
  a00e62:	a0 00 00 00 00 00 1b 	movabs 0x1b0000000000,%al
  a00e69:	00 00 
  a00e6b:	00 00                	add    %al,(%rax)
  a00e6d:	00 00                	add    %al,(%rax)
  a00e6f:	00 08                	add    %cl,(%rax)
  a00e71:	00 00                	add    %al,(%rax)
  a00e73:	00 00                	add    %al,(%rax)
  a00e75:	00 00                	add    %al,(%rax)
  a00e77:	00 1a                	add    %bl,(%rdx)
  a00e79:	00 00                	add    %al,(%rax)
  a00e7b:	00 00                	add    %al,(%rax)
  a00e7d:	00 00                	add    %al,(%rax)
  a00e7f:	00 18                	add    %bl,(%rax)
  a00e81:	0e                   	(bad)  
  a00e82:	a0 00 00 00 00 00 1c 	movabs 0x1c0000000000,%al
  a00e89:	00 00 
  a00e8b:	00 00                	add    %al,(%rax)
  a00e8d:	00 00                	add    %al,(%rax)
  a00e8f:	00 08                	add    %cl,(%rax)
  a00e91:	00 00                	add    %al,(%rax)
  a00e93:	00 00                	add    %al,(%rax)
  a00e95:	00 00                	add    %al,(%rax)
  a00e97:	00 f5                	add    %dh,%ch
  a00e99:	fe                   	(bad)  
  a00e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  a00e9d:	00 00                	add    %al,(%rax)
  a00e9f:	00 98 02 80 00 00    	add    %bl,0x8002(%rax)
  a00ea5:	00 00                	add    %al,(%rax)
  a00ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # a00ead <_DYNAMIC+0x85>
  a00ead:	00 00                	add    %al,(%rax)
  a00eaf:	00 90 03 80 00 00    	add    %dl,0x8003(%rax)
  a00eb5:	00 00                	add    %al,(%rax)
  a00eb7:	00 06                	add    %al,(%rsi)
  a00eb9:	00 00                	add    %al,(%rax)
  a00ebb:	00 00                	add    %al,(%rax)
  a00ebd:	00 00                	add    %al,(%rax)
  a00ebf:	00 b8 02 80 00 00    	add    %bh,0x8002(%rax)
  a00ec5:	00 00                	add    %al,(%rax)
  a00ec7:	00 0a                	add    %cl,(%rdx)
  a00ec9:	00 00                	add    %al,(%rax)
  a00ecb:	00 00                	add    %al,(%rax)
  a00ecd:	00 00                	add    %al,(%rax)
  a00ecf:	00 72 00             	add    %dh,0x0(%rdx)
  a00ed2:	00 00                	add    %al,(%rax)
  a00ed4:	00 00                	add    %al,(%rax)
  a00ed6:	00 00                	add    %al,(%rax)
  a00ed8:	0b 00                	or     (%rax),%eax
  a00eda:	00 00                	add    %al,(%rax)
  a00edc:	00 00                	add    %al,(%rax)
  a00ede:	00 00                	add    %al,(%rax)
  a00ee0:	18 00                	sbb    %al,(%rax)
  a00ee2:	00 00                	add    %al,(%rax)
  a00ee4:	00 00                	add    %al,(%rax)
  a00ee6:	00 00                	add    %al,(%rax)
  a00ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  a00ef5:	00 00                	add    %al,(%rax)
  a00ef7:	00 03                	add    %al,(%rbx)
	...
  a00f01:	10 a0 00 00 00 00    	adc    %ah,0x0(%rax)
  a00f07:	00 02                	add    %al,(%rdx)
  a00f09:	00 00                	add    %al,(%rax)
  a00f0b:	00 00                	add    %al,(%rax)
  a00f0d:	00 00                	add    %al,(%rax)
  a00f0f:	00 a8 00 00 00 00    	add    %ch,0x0(%rax)
  a00f15:	00 00                	add    %al,(%rax)
  a00f17:	00 14 00             	add    %dl,(%rax,%rax,1)
  a00f1a:	00 00                	add    %al,(%rax)
  a00f1c:	00 00                	add    %al,(%rax)
  a00f1e:	00 00                	add    %al,(%rax)
  a00f20:	07                   	(bad)  
  a00f21:	00 00                	add    %al,(%rax)
  a00f23:	00 00                	add    %al,(%rax)
  a00f25:	00 00                	add    %al,(%rax)
  a00f27:	00 17                	add    %dl,(%rdi)
  a00f29:	00 00                	add    %al,(%rax)
  a00f2b:	00 00                	add    %al,(%rax)
  a00f2d:	00 00                	add    %al,(%rax)
  a00f2f:	00 60 04             	add    %ah,0x4(%rax)
  a00f32:	80 00 00             	addb   $0x0,(%rax)
  a00f35:	00 00                	add    %al,(%rax)
  a00f37:	00 07                	add    %al,(%rdi)
  a00f39:	00 00                	add    %al,(%rax)
  a00f3b:	00 00                	add    %al,(%rax)
  a00f3d:	00 00                	add    %al,(%rax)
  a00f3f:	00 48 04             	add    %cl,0x4(%rax)
  a00f42:	80 00 00             	addb   $0x0,(%rax)
  a00f45:	00 00                	add    %al,(%rax)
  a00f47:	00 08                	add    %cl,(%rax)
  a00f49:	00 00                	add    %al,(%rax)
  a00f4b:	00 00                	add    %al,(%rax)
  a00f4d:	00 00                	add    %al,(%rax)
  a00f4f:	00 18                	add    %bl,(%rax)
  a00f51:	00 00                	add    %al,(%rax)
  a00f53:	00 00                	add    %al,(%rax)
  a00f55:	00 00                	add    %al,(%rax)
  a00f57:	00 09                	add    %cl,(%rcx)
  a00f59:	00 00                	add    %al,(%rax)
  a00f5b:	00 00                	add    %al,(%rax)
  a00f5d:	00 00                	add    %al,(%rax)
  a00f5f:	00 18                	add    %bl,(%rax)
  a00f61:	00 00                	add    %al,(%rax)
  a00f63:	00 00                	add    %al,(%rax)
  a00f65:	00 00                	add    %al,(%rax)
  a00f67:	00 fe                	add    %bh,%dh
  a00f69:	ff                   	(bad)  
  a00f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  a00f6d:	00 00                	add    %al,(%rax)
  a00f6f:	00 18                	add    %bl,(%rax)
  a00f71:	04 80                	add    $0x80,%al
  a00f73:	00 00                	add    %al,(%rax)
  a00f75:	00 00                	add    %al,(%rax)
  a00f77:	00 ff                	add    %bh,%bh
  a00f79:	ff                   	(bad)  
  a00f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  a00f7d:	00 00                	add    %al,(%rax)
  a00f7f:	00 01                	add    %al,(%rcx)
  a00f81:	00 00                	add    %al,(%rax)
  a00f83:	00 00                	add    %al,(%rax)
  a00f85:	00 00                	add    %al,(%rax)
  a00f87:	00 f0                	add    %dh,%al
  a00f89:	ff                   	(bad)  
  a00f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  a00f8d:	00 00                	add    %al,(%rax)
  a00f8f:	00 02                	add    %al,(%rdx)
  a00f91:	04 80                	add    $0x80,%al
	...

Disassembly of section .got:

0000000000a00ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000a01000 <_GLOBAL_OFFSET_TABLE_>:
  a01000:	28 0e                	sub    %cl,(%rsi)
  a01002:	a0 00 00 00 00 00 00 	movabs 0x0,%al
  a01009:	00 00 
	...
  a01017:	00 46 05             	add    %al,0x5(%rsi)
  a0101a:	80 00 00             	addb   $0x0,(%rax)
  a0101d:	00 00                	add    %al,(%rax)
  a0101f:	00 56 05             	add    %dl,0x5(%rsi)
  a01022:	80 00 00             	addb   $0x0,(%rax)
  a01025:	00 00                	add    %al,(%rax)
  a01027:	00 66 05             	add    %ah,0x5(%rsi)
  a0102a:	80 00 00             	addb   $0x0,(%rax)
  a0102d:	00 00                	add    %al,(%rax)
  a0102f:	00 76 05             	add    %dh,0x5(%rsi)
  a01032:	80 00 00             	addb   $0x0,(%rax)
  a01035:	00 00                	add    %al,(%rax)
  a01037:	00 86 05 80 00 00    	add    %al,0x8005(%rsi)
  a0103d:	00 00                	add    %al,(%rax)
  a0103f:	00 96 05 80 00 00    	add    %dl,0x8005(%rsi)
  a01045:	00 00                	add    %al,(%rax)
  a01047:	00 a6 05 80 00 00    	add    %ah,0x8005(%rsi)
  a0104d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000a01050 <__data_start>:
	...

0000000000a01058 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000a01060 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x800490>
   a:	74 75                	je     81 <_init-0x800487>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2f8e23d8>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x800479>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	31 31                	xor    %esi,(%rcx)
  24:	29 20                	sub    %esp,(%rax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%rdx)
  2d:	30 31                	xor    %dh,(%rcx)
  2f:	36 30 36             	xor    %dh,%ss:(%rsi)
  32:	30 39                	xor    %bh,(%rcx)
	...
